{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 2,
    "pending": 0,
    "failures": 2,
    "start": "2024-02-14T12:54:09.987Z",
    "end": "2024-02-14T12:55:59.049Z",
    "duration": 109062,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a54ea10c-0d6b-4706-8169-e185f9cc89ca",
      "title": "",
      "fullFile": "C:\\Users\\miko\\desktop\\pros\\infonance\\daguSms\\selenium_test\\test.js",
      "file": "\\test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e3ae5d08-08cd-4a2b-b5d0-bcb49b85fd94",
          "title": "login testing using Mocha",
          "fullFile": "C:\\Users\\miko\\desktop\\pros\\infonance\\daguSms\\selenium_test\\test.js",
          "file": "\\test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"login testing using Mocha\"",
              "fullTitle": "login testing using Mocha \"before each\" hook in \"login testing using Mocha\"",
              "timedOut": false,
              "duration": 13995,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('firefox').build();",
              "err": {},
              "uuid": "67f3fdaf-7d35-41d9-ae9e-fa1ee6912bcb",
              "parentUUID": "e3ae5d08-08cd-4a2b-b5d0-bcb49b85fd94",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"login testing using Mocha\"",
              "fullTitle": "login testing using Mocha \"after each\" hook in \"login testing using Mocha\"",
              "timedOut": false,
              "duration": 4777,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('This will be executed after each test');\nawait driver.quit();",
              "err": {},
              "uuid": "ec5596e9-e09b-45be-ac61-5e4021ea8f33",
              "parentUUID": "e3ae5d08-08cd-4a2b-b5d0-bcb49b85fd94",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "login test - Combination 1",
              "fullTitle": "login testing using Mocha login test - Combination 1",
              "timedOut": false,
              "duration": 6517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get('https://dagusms.com/auth/login');\n  const Phone = await driver.findElement(By.css(\"input[data-variant='default'][placeholder='+2519********']\"));\n  await Phone.sendKeys(credential.Phone);\n  const password = await driver.findElement(By.css(\"input.m-f2d85dd2.mantine-PasswordInput-innerInput[placeholder='*********']\"));\n  await password.sendKeys(credential.password);\n  const login = await driver.findElement(By.css(\"span.m-811560b9.mantine-Button-label\"));\n  await login.click();\n  const dashboardLink = await driver.wait(until.elementLocated(By.xpath('/html/body/div[2]/div/main/div[1]/div/div/p')), 5000);\n  const result = await dashboardLink.getAttribute('innerText');\n  console.log(result, \" tati\")\n  assert.strictEqual(result, 'Dashboard', `Login was successful for ${credential.Phone}`);\n} catch (error) {\n  console.error(`Error in test for combination ${index + 1}:`, error);\n  throw error;\n}",
              "err": {},
              "uuid": "256fc96a-c706-43f1-991c-078c7bdf1620",
              "parentUUID": "e3ae5d08-08cd-4a2b-b5d0-bcb49b85fd94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login test - Combination 2",
              "fullTitle": "login testing using Mocha login test - Combination 2",
              "timedOut": false,
              "duration": 8557,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get('https://dagusms.com/auth/login');\n  const Phone = await driver.findElement(By.css(\"input[data-variant='default'][placeholder='+2519********']\"));\n  await Phone.sendKeys(credential.Phone);\n  const password = await driver.findElement(By.css(\"input.m-f2d85dd2.mantine-PasswordInput-innerInput[placeholder='*********']\"));\n  await password.sendKeys(credential.password);\n  const login = await driver.findElement(By.css(\"span.m-811560b9.mantine-Button-label\"));\n  await login.click();\n  const dashboardLink = await driver.wait(until.elementLocated(By.xpath('/html/body/div[2]/div/main/div[1]/div/div/p')), 5000);\n  const result = await dashboardLink.getAttribute('innerText');\n  console.log(result, \" tati\")\n  assert.strictEqual(result, 'Dashboard', `Login was successful for ${credential.Phone}`);\n} catch (error) {\n  console.error(`Error in test for combination ${index + 1}:`, error);\n  throw error;\n}",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(xpath, /html/body/div[2]/div/main/div[1]/div/div/p)\nWait timed out after 5151ms",
                "estack": "TimeoutError: Waiting for element to be located By(xpath, /html/body/div[2]/div/main/div[1]/div/div/p)\nWait timed out after 5151ms\n    at C:\\Users\\miko\\desktop\\pros\\infonance\\daguSms\\selenium_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:930:17\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "12219fe0-1e2d-4c09-847e-e78bfaf58193",
              "parentUUID": "e3ae5d08-08cd-4a2b-b5d0-bcb49b85fd94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login test - Combination 3",
              "fullTitle": "login testing using Mocha login test - Combination 3",
              "timedOut": false,
              "duration": 5418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get('https://dagusms.com/auth/login');\n  const Phone = await driver.findElement(By.css(\"input[data-variant='default'][placeholder='+2519********']\"));\n  await Phone.sendKeys(credential.Phone);\n  const password = await driver.findElement(By.css(\"input.m-f2d85dd2.mantine-PasswordInput-innerInput[placeholder='*********']\"));\n  await password.sendKeys(credential.password);\n  const login = await driver.findElement(By.css(\"span.m-811560b9.mantine-Button-label\"));\n  await login.click();\n  const dashboardLink = await driver.wait(until.elementLocated(By.xpath('/html/body/div[2]/div/main/div[1]/div/div/p')), 5000);\n  const result = await dashboardLink.getAttribute('innerText');\n  console.log(result, \" tati\")\n  assert.strictEqual(result, 'Dashboard', `Login was successful for ${credential.Phone}`);\n} catch (error) {\n  console.error(`Error in test for combination ${index + 1}:`, error);\n  throw error;\n}",
              "err": {},
              "uuid": "15160f3c-0e7f-41dc-aa1f-9ed044216eb3",
              "parentUUID": "e3ae5d08-08cd-4a2b-b5d0-bcb49b85fd94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login test - Combination 4",
              "fullTitle": "login testing using Mocha login test - Combination 4",
              "timedOut": false,
              "duration": 8374,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get('https://dagusms.com/auth/login');\n  const Phone = await driver.findElement(By.css(\"input[data-variant='default'][placeholder='+2519********']\"));\n  await Phone.sendKeys(credential.Phone);\n  const password = await driver.findElement(By.css(\"input.m-f2d85dd2.mantine-PasswordInput-innerInput[placeholder='*********']\"));\n  await password.sendKeys(credential.password);\n  const login = await driver.findElement(By.css(\"span.m-811560b9.mantine-Button-label\"));\n  await login.click();\n  const dashboardLink = await driver.wait(until.elementLocated(By.xpath('/html/body/div[2]/div/main/div[1]/div/div/p')), 5000);\n  const result = await dashboardLink.getAttribute('innerText');\n  console.log(result, \" tati\")\n  assert.strictEqual(result, 'Dashboard', `Login was successful for ${credential.Phone}`);\n} catch (error) {\n  console.error(`Error in test for combination ${index + 1}:`, error);\n  throw error;\n}",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(xpath, /html/body/div[2]/div/main/div[1]/div/div/p)\nWait timed out after 5087ms",
                "estack": "TimeoutError: Waiting for element to be located By(xpath, /html/body/div[2]/div/main/div[1]/div/div/p)\nWait timed out after 5087ms\n    at C:\\Users\\miko\\desktop\\pros\\infonance\\daguSms\\selenium_test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:930:17\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7068ce35-bf0b-4569-b6d0-8aca19e066aa",
              "parentUUID": "e3ae5d08-08cd-4a2b-b5d0-bcb49b85fd94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "256fc96a-c706-43f1-991c-078c7bdf1620",
            "15160f3c-0e7f-41dc-aa1f-9ed044216eb3"
          ],
          "failures": [
            "12219fe0-1e2d-4c09-847e-e78bfaf58193",
            "7068ce35-bf0b-4569-b6d0-8aca19e066aa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 28866,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}